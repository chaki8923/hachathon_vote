// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(uuid())
  name        String
  teamName    String
  description String
  appealPoint String?
  demoUrl     String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  votes       Vote[]
  
  @@unique([name, teamName], name: "name_teamName")
}

model Vote {
  id                String   @id @default(uuid())
  voterName         String?  // Optional voter name
  projectId         String
  planningScore     Int      // 企画力 (0-5)
  technicalScore    Int      // 技術力 (0-5)
  uiUxScore         Int      // UI/UX (0-5)
  processScore      Int      // プロセス・取り組み姿勢 (0-5)
  aiUtilizationScore Int     // AI活用 (0-5)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  project           Project  @relation(fields: [projectId], references: [id])
  
  // IP address to prevent duplicate votes from same device
  ipAddress         String?
  
  @@unique([ipAddress, projectId])
}

model VotingPeriod {
  id        String   @id @default(uuid())
  startTime DateTime
  endTime   DateTime
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
